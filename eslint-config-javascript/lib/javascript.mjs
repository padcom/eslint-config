import js from '@eslint/js'
import stylisticEslintPlugin from '@stylistic/eslint-plugin'

/** @type {import('eslint').Linter.Config[]} */
export const javascript = [
  {
    ...js.configs.recommended,
    name: 'eslint/js/recommended',
  },
  {
    name: 'padcom/flat/javascript-base',
    files: ['**/*.[j,mj,cj,t,mt]s', '**/*.[j,t]sx', '**/*.vue'],
    rules: {
      'array-callback-return': 'error',
      'arrow-body-style': 'error',
      'complexity': ['error', 4],
      'consistent-return': 'error',
      'curly': ['error', 'multi-line'],
      'dot-notation': 'error',
      'eqeqeq': ['error', 'always', {
        null: 'ignore',
      }],
      'func-style': ['error', 'declaration', {
        allowArrowFunctions: true,
      }],
      'grouped-accessor-pairs': ['error', 'getBeforeSet'],
      'line-comment-position': 'off',
      // TODO: Rain check
      // 'lines-around-comment': ['error', { beforeLineComment: true }],
      'max-depth': ['error', 2],
      'max-lines-per-function': ['error', 32],
      'max-nested-callbacks': ['error', 2],
      'max-params': ['error', 4],
      'new-cap': 'error',
      'no-alert': 'error',
      'no-array-constructor': 'error',
      'no-await-in-loop': 'error',
      'no-caller': 'error',
      'no-constant-binary-expression': 'error',
      'no-constant-condition': ['off'],
      'no-constructor-return': 'error',
      'no-else-return': 'off',
      'no-eq-null': 'warn',
      'no-eval': 'error',
      'no-extend-native': 'error',
      'no-extra-bind': 'error',
      'no-extra-label': 'error',
      'no-fallthrough': 'error',
      'no-implicit-coercion': 'error',
      'no-implied-eval': 'error',
      'no-invalid-this': 'error',
      'no-iterator': 'error',
      'no-label-var': 'error',
      'no-lone-blocks': 'error',
      'no-lonely-if': 'error',
      'no-loop-func': 'error',
      'no-magic-numbers': 'off',
      'no-new': 'error',
      'no-new-native-nonconstructor': 'error',
      'no-object-constructor': 'error',
      'no-new-wrappers': 'error',
      'no-param-reassign': 'off',
      'no-promise-executor-return': 'error',
      'no-proto': 'error',
      // TODO: Rain check
      'no-restricted-exports': 'error',
      'no-restricted-globals': 'error',
      'no-restricted-imports': 'error',
      'no-restricted-properties': 'error',
      'no-restricted-syntax': 'off',
      'no-return-assign': 'error',
      'no-return-await': 'error',
      'no-script-url': 'error',
      'no-self-compare': 'error',
      'no-sequences': 'error',
      'no-shadow': 'error',
      'no-template-curly-in-string': 'error',
      'no-throw-literal': 'error',
      'no-underscore-dangle': 'error',
      'no-unused-expressions': 'error',
      'no-unused-private-class-members': 'error',
      'no-use-before-define': 'error',
      'no-useless-call': 'error',
      'no-useless-computed-key': 'error',
      'no-useless-concat': 'error',
      'no-useless-constructor': 'error',
      'no-useless-rename': 'error',
      'no-useless-return': 'error',
      'no-var': 'error',
      'object-shorthand': 'error',
      'operator-assignment': ['error', 'always'],
      'prefer-arrow-callback': 'error',
      'prefer-const': 'error',
      'prefer-destructuring': 'error',
      'prefer-exponentiation-operator': 'error',
      'prefer-named-capture-group': 'warn',
      'prefer-numeric-literals': 'error',
      'prefer-object-has-own': 'error',
      'prefer-object-spread': 'error',
      'prefer-promise-reject-errors': ['error', {
        allowEmptyReject: true,
      }],
      'prefer-rest-params': 'error',
      'prefer-template': 'error',
      'require-atomic-updates': 'error',
      'require-await': 'error',
      'sort-imports': 'off',
      'symbol-description': 'error',
      'yoda': 'error',
    },
  },

  {
    ...stylisticEslintPlugin.configs.customize(),
    name: 'stylistic/flat/default',
  },
  {
    name: 'padcom/flat/javascript-stylistic',
    files: ['**/*.[j,mj,cj,t,mt]s', '**/*.[j,t]sx', '**/*.vue'],
    rules: {
      '@stylistic/array-bracket-newline': ['error', 'consistent'],
      '@stylistic/array-bracket-spacing': ['error', 'never'],
      '@stylistic/array-element-newline': ['error', 'consistent'],
      '@stylistic/arrow-parens': ['error', 'as-needed'],
      '@stylistic/arrow-spacing': 'error',
      '@stylistic/block-spacing': ['error', 'always'],
      '@stylistic/brace-style': ['error', '1tbs', {
        allowSingleLine: true,
      }],
      '@stylistic/comma-dangle': ['error', 'always-multiline'],
      '@stylistic/comma-spacing': 'error',
      '@stylistic/comma-style': ['error', 'last'],
      '@stylistic/computed-property-spacing': 'error',
      '@stylistic/dot-location': ['error', 'property'],
      '@stylistic/eol-last': 'error',
      '@stylistic/func-call-spacing': 'error',
      '@stylistic/function-call-argument-newline': ['error', 'consistent'],
      '@stylistic/function-call-spacing': ['error', 'never'],
      '@stylistic/function-paren-newline': ['error', 'consistent'],
      '@stylistic/generator-star-spacing': 'error',
      '@stylistic/implicit-arrow-linebreak': 'error',
      '@stylistic/indent': ['error', 2, {
        SwitchCase: 1,
      }],
      '@stylistic/jsx-quotes': ['error', 'prefer-double'],
      '@stylistic/key-spacing': 'error',
      '@stylistic/keyword-spacing': 'error',
      '@stylistic/line-comment-position': 'off',
      // TODO: Rain check
      // '@stylistic/linebreak-style': ['error', 'unix'],
      '@stylistic/lines-around-comment': 'off',
      '@stylistic/lines-between-class-members': ['error', 'always', { exceptAfterSingleLine: true }],
      '@stylistic/max-len': ['error', 130],
      '@stylistic/max-statements-per-line': ['error', { max: 2 }],
      '@stylistic/new-parens': 'error',
      // TODO: Rain check
      '@stylistic/newline-per-chained-call': 'off',
      '@stylistic/multiline-comment-style': 'off',
      '@stylistic/multiline-ternary': ['error', 'always-multiline'],
      // TODO: Rain check
      '@stylistic/no-confusing-arrow': 'off',
      '@stylistic/no-extra-parens': 'error',
      '@stylistic/no-extra-semi': 'error',
      '@stylistic/no-floating-decimal': 'error',
      '@stylistic/no-mixed-operators': 'error',
      '@stylistic/no-mixed-spaces-and-tabs': 'error',
      '@stylistic/no-multi-spaces': 'error',
      '@stylistic/no-multiple-empty-lines': ['error', {
        max: 1,
      }],
      '@stylistic/no-tabs': 'error',
      '@stylistic/no-trailing-spaces': 'error',
      '@stylistic/no-whitespace-before-property': 'error',
      '@stylistic/nonblock-statement-body-position': ['error', 'any'],
      '@stylistic/object-curly-newline': ['error', { consistent: true, multiline: true }],
      '@stylistic/object-curly-spacing': ['error', 'always'],
      '@stylistic/object-property-newline': 'off',
      // TODO: Rain check
      '@stylistic/one-var-declaration-per-line': 'off',
      '@stylistic/operator-linebreak': ['error', 'before'],
      '@stylistic/padded-blocks': ['error', 'never'],
      '@stylistic/padding-line-between-statements': ['error',
        { blankLine: 'always', prev: 'import', next: '*' },
        { blankLine: 'always', prev: '*', next: 'export' },
        { blankLine: 'always', prev: '*', next: ['return', 'while', 'if', 'for', 'block-like'] },
        { blankLine: 'any', prev: ['const', 'let', 'if'], next: ['while', 'if', 'for', 'block-like'] },
        { blankLine: 'always', prev: '*', next: 'class' },
        { blankLine: 'any', prev: 'import', next: 'import' },
      ],
      '@stylistic/quotes': ['error', 'single', {
        allowTemplateLiterals: true,
        avoidEscape: true,
      }],
      '@stylistic/rest-spread-spacing': 'error',
      '@stylistic/semi': ['error', 'never'],
      '@stylistic/semi-spacing': 'error',
      '@stylistic/semi-style': ['error', 'last'],
      '@stylistic/space-before-blocks': ['error', 'always'],
      '@stylistic/space-before-function-paren': ['error', {
        anonymous: 'never',
        named: 'never',
        asyncArrow: 'always',
      }],
      '@stylistic/space-in-parens': 'error',
      '@stylistic/space-infix-ops': 'error',
      '@stylistic/space-unary-ops': 'error',
      // TODO: Figure out why the exceptions don't work!
      '@stylistic/spaced-comment': ['error', 'always', { block: { exceptions: ['-'] } }],
      '@stylistic/switch-colon-spacing': 'error',
      '@stylistic/template-curly-spacing': ['error', 'never'],
      '@stylistic/template-tag-spacing': ['error', 'never'],
      '@stylistic/wrap-iife': 'error',
      '@stylistic/wrap-regex': 'off',
      '@stylistic/yield-star-spacing': 'error',
    },
  },
]
